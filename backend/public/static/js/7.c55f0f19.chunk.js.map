{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js"],"names":["Card","props","className","style","children","Avatar","src","image","alt","width","height","UsersList","to","id","process","name","placeCount","items","length","map","user","key","places","Users","useState","loadedUsers","setLoadedUsers","useHttpClient","isLoading","error","sendRequest","clearError","useEffect","a","responseData","users","console","log","fetchUsers","Fragment","ErrorModal","onClear","LoadingSpinner"],"mappings":"qGAAA,0BAYeA,IARF,SAACC,GACZ,OACE,yBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,OACrDF,EAAMG,Y,+LCSEC,G,MAZA,SAACJ,GACd,OACE,yBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,OACxD,yBACEG,IAAKL,EAAMM,MACXC,IAAKP,EAAMO,IACXL,MAAO,CAAEM,MAAOR,EAAMQ,MAAOC,OAAQT,EAAMQ,YCoBpCE,G,MAvBG,SAACV,GACjB,OACE,wBAAIC,UAAU,aACZ,kBAACF,EAAA,EAAD,CAAME,UAAU,sBACd,kBAAC,IAAD,CAAMU,GAAE,UAAKX,EAAMY,GAAX,YACN,yBAAKX,UAAU,oBACb,kBAAC,EAAD,CACEK,MAAK,UAAKO,wBAAL,YAAwCb,EAAMM,OACnDC,IAAKP,EAAMc,QAGf,yBAAKb,UAAU,mBACb,4BAAKD,EAAMc,MACX,4BACGd,EAAMe,WADT,IAC2C,IAArBf,EAAMe,WAAmB,QAAU,gBCatDL,G,MA5BG,SAACV,GACjB,OAA2B,IAAvBA,EAAMgB,MAAMC,OAEZ,yBAAKhB,UAAU,UACb,kBAACF,EAAA,EAAD,KACE,iDAON,wBAAIE,UAAU,cACXD,EAAMgB,MAAME,KAAI,SAACC,GAChB,OACE,kBAAC,EAAD,CACEC,IAAKD,EAAKP,GACVA,GAAIO,EAAKP,GACTN,MAAOa,EAAKb,MACZQ,KAAMK,EAAKL,KACXC,WAAYI,EAAKE,OAAOJ,e,wBCarBK,UAhCD,WAAO,IAAD,EACoBC,qBADpB,mBACXC,EADW,KACEC,EADF,OAEoCC,cAA9CC,EAFU,EAEVA,UAAWC,EAFD,EAECA,MAAOC,EAFR,EAEQA,YAAaC,EAFrB,EAEqBA,WAiBvC,OAfAC,qBAAU,YAEQ,uCAAG,4BAAAC,EAAA,+EAEYH,EACzBhB,mCAHa,OAEToB,EAFS,OAKfR,EAAeQ,EAAaC,OALb,gDAOfC,QAAQC,IAAR,MAPe,yDAAH,qDAUhBC,KACC,CAACR,IAGF,kBAAC,IAAMS,SAAP,KACE,kBAACC,EAAA,EAAD,CAAYX,MAAOA,EAAOY,QAASV,IAClCH,GACC,yBAAK1B,UAAU,UACb,kBAACwC,EAAA,EAAD,QAGFd,GAAaH,GAAe,kBAAC,EAAD,CAAWR,MAAOQ","file":"static/js/7.c55f0f19.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./Avatar.css\";\n\nconst Avatar = (props) => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport \"./UserItem.css\";\n\nconst UsersList = (props) => {\n  return (\n    <li className=\"user-item\">\n      <Card className=\"user-item__content\">\n        <Link to={`${props.id}/places`}>\n          <div className=\"user-item__image\">\n            <Avatar\n              image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.name}\n            />\n          </div>\n          <div className=\"user-item__info\">\n            <h2>{props.name}</h2>\n            <h3>\n              {props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}\n            </h3>\n          </div>\n        </Link>\n      </Card>\n    </li>\n  );\n};\n\nexport default UsersList;\n","import React from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport UserItem from \"./UserItem\";\nimport \"./UsersList.css\";\n\nconst UsersList = (props) => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>No users found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"users-list\">\n      {props.items.map((user) => {\n        return (\n          <UserItem\n            key={user.id}\n            id={user.id}\n            image={user.image}\n            name={user.name}\n            placeCount={user.places.length}\n          ></UserItem>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default UsersList;\n","import React, { useEffect, useState } from \"react\";\n\nimport UsersList from \"../components/UsersList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst Users = () => {\n  const [loadedUsers, setLoadedUsers] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  useEffect(() => {\n    // useEffect doesn't want a promise so don't use async directly\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + \"/users\"\n        );\n        setLoadedUsers(responseData.users);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchUsers();\n  }, [sendRequest]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n    </React.Fragment>\n  );\n};\n\nexport default Users;\n"],"sourceRoot":""}