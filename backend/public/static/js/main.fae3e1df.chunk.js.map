{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","token","userId","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","UserPlaces","NewPlace","UpdatePlace","Auth","App","routes","setUserId","setToken","tokenExpirDate","setTokenExpirDate","useCallback","uid","expirationDate","tokenExpirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.fae3e1df.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  token: null,\n  userId: null,\n  login: () => {},\n  logout: () => {},\n});\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./Backdrop.css\";\n\nconst Backdrop = (props) => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById(\"backdrop-hook\")\n  );\n};\n\nexport default Backdrop;\n","import { useState, useCallback, useEffect } from \"react\";\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [userId, setUserId] = useState(null);\n  const [token, setToken] = useState(null);\n  const [tokenExpirDate, setTokenExpirDate] = useState();\n\n  const login = useCallback((uid, token, expirationDate) => {\n    // useCallback so not rerendered\n    setUserId(uid);\n    setToken(token);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60); // token expires in one hour\n    setTokenExpirDate(tokenExpirationDate);\n    localStorage.setItem(\n      \"userData\",\n      JSON.stringify({\n        userId: uid,\n        token,\n        expiration: tokenExpirationDate.toISOString(),\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setUserId(null);\n    setToken(false);\n    setTokenExpirDate(null);\n    localStorage.removeItem(\"userData\");\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirDate) {\n      // after login not logout\n      const remainingTime = tokenExpirDate.getTime() - new Date().getTime(); // get miliseconds\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      // manually logged out\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      // expir date still in future so keep it\n      login(\n        storedData.userId,\n        storedData.token,\n        new Date(storedData.expiration)\n      );\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};\n","import React from \"react\";\nimport \"./MainHeader.css\";\n\nconst MainHeader = (props) => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport \"./NavLinks.css\";\n\nimport { AuthContext } from \"../../context/auth-context\";\n\nconst NavLinks = () => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOG OUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport \"./SideDrawer.css\";\n\nconst SideDrawer = (props) => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>\n        {props.children}\n      </aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\n};\n\nexport default SideDrawer;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MainHeader from \"./MainHeader\";\nimport \"./MainNavigation.css\";\nimport NavLinks from \"./NavLinks\";\nimport SideDrawer from \"./SideDrawer\";\nimport BackDrop from \"../UIElements/Backdrop\";\n\nconst MainNavigation = (props) => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <BackDrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\n//import NewPlace from \"./places/pages/NewPlace\";\n//import Users from \"./user/pages/Users\";\n//import UserPlaces from \"./places/pages/UserPlaces\";\n//import UpdatePlace from \"./places/pages/UpdatePlace\";\n//import Auth from \"./user/pages/Auth\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\n\nconst Users = React.lazy(() => import(\"./user/pages/Users\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\nconst Auth = React.lazy(() => import(\"./user/pages/Auth\"));\n\nfunction App() {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          {/* need to have /places/new before this or new will be interpreted as :placeId */}\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\" exact>\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      {/* wrap context so every nested component can access it */}\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}