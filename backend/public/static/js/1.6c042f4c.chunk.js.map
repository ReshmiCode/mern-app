{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/hooks/form-hook.js","shared/components/FormElements/Input.js","shared/components/FormElements/ImageUpload.js","places/pages/NewPlace.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","formReducer","state","action","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","useReducer","formState","dispatch","useCallback","id","inputData","formValidity","inputReducer","isTouched","Input","props","valid","inputState","onInput","useEffect","changeHandler","event","touchHandler","element","placeholder","onChange","onBlur","rows","className","htmlFor","label","errorText","ImageUpload","filePickerRef","useRef","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","center","src","alt","onClick","current","click","NewPlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","title","description","address","image","inputHandler","history","useHistory","placeSubmitHandler","a","preventDefault","formData","FormData","append","process","Authorization","token","console","log","Fragment","onClear","onSubmit","asOverlay","disabled"],"mappings":"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","file":"static/js/1.6c042f4c.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_MIN = \"MIN\";\nconst VALIDATOR_TYPE_MAX = \"MAX\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\nconst VALIDATOR_TYPE_FILE = \"FILE\";\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) continue; // for undefined\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    case \"SET_DATA\":\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({ type: \"INPUT_CHANGE\", value, isValid, inputId: id });\n  }, []); // useCallback -> this should rerender based on dependencies to make useEffect in Input not run again\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      formIsValid: formValidity,\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};\n","import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from \"../../util/validators\";\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\":\n      return {\n        ...state,\n        isTouched: true,\n      };\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.value || \"\",\n    isValid: props.valid || false,\n    isTouched: false,\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, onInput, value, isValid]);\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({ type: \"TOUCH\" });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n\n// or use Formik\n","import React, { useRef, useState, useEffect } from \"react\";\nimport Button from \"./Button\";\nimport \"./ImageUpload.css\";\n\nconst ImageUpload = (props) => {\n  const filePickerRef = useRef();\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const pickedHandler = (event) => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid); //if you use isValid you get the old value\n  };\n  const pickImageHandler = () => {\n    filePickerRef.current.click(); // use DOM element w/o seeing it\n  };\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      // called when done reading\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  return (\n    <div className=\"form-control\">\n      <input\n        type=\"file\"\n        ref={filePickerRef}\n        id={props.id}\n        style={{ display: \"none\" }}\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && \"center\"}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./PlaceForm.css\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n      },\n      address: {\n        value: \"\",\n        isValid: false,\n      },\n      image: {\n        value: null,\n        isValid: false,\n      },\n    },\n    false\n  );\n  const history = useHistory();\n\n  const placeSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", formState.inputs.title.value);\n      formData.append(\"description\", formState.inputs.description.value);\n      formData.append(\"address\", formState.inputs.address.value);\n      formData.append(\"image\", formState.inputs.image.value);\n\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + \"/places\",\n        \"POST\",\n        formData,\n        {\n          Authorization: \"Bearer \" + auth.token,\n        }\n      );\n      history.push(\"/\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          element=\"input\"\n          type=\"input\"\n          id=\"title\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          element=\"textarea\"\n          label=\"Description\"\n          id=\"description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          element=\"input\"\n          label=\"Address\"\n          id=\"address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please provide an image.\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;\n"],"sourceRoot":""}